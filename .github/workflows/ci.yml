name: Continuous Integration (CI)

on:
  pull_request:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

# To successfully find the files that are required for testing:
env:
  TEST_WORKSPACE: ${{ github.workspace }}

jobs:
  ci:
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'push' || github.event_name == 'pull_request' || (github.event_name == 'issue_comment' && github.event.comment.body == 'recheck ci' && github.event.comment.user.login == 'Kaszanas')
    # Set up operating system
    runs-on: ubuntu-latest

    # Define job steps
    steps:
      - name: Set up Python 3.11.10
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38
        with:
          python-version: "3.11.10"

      - name: Check-out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Install poetry
        uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a

        # Installing only development dependencies (for pre-commit)
      - name: Install development dependencies
        run: poetry install --only dev

        # Code quality checks:
      - name: Initialize pre-commit
        run: poetry run pre-commit install
      - name: Run pre-commit on all files.
        run: poetry run pre-commit run --all-files

        # Run tests:
      - name: Install all dependencies
        run: poetry install
      - name: Run tests
        run: poetry run pytest --ignore-glob='test_*.py' ./tests/test_cases/ --cov=sc2_datasets --cov-report term-missing --cov-report html --cov=xml 2>&1

      - name: Build documentation
        run: poetry run make html --directory docs/
